# Dev (local) servers
# Static files are served by Django
server {
    listen 80;
    server_name dev.budgetwiser.org;
    charset utf-8;

    sendfile off;

    location / {
        try_files $uri @django;
    }

    location @django {
        proxy_pass http://web:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 30s;
        proxy_read_timeout 30s;
    }
}

server {
    listen 443 ssl;
    server_name dev.budgetwiser.org;
    charset utf-8;

    sendfile off;

    ssl_certificate /etc/letsencrypt/live/api.budgetwiser.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.budgetwiser.org/privkey.pem;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    location / {
        try_files $uri @django;
    }

    location @django {
        proxy_pass http://web:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 30s;
        proxy_read_timeout 30s;
    }
}



# Staging
# Static files are collected and served by nginx
server {
    listen 80 default_server;
    # server_name api.budgetwiser.org;
    charset utf-8;

    # letsencrypt challenge
    location /.well-known/ {
        root /var/www/api.budgetwiser.org/;
    }

    #location / {
    #    # Force HTTPS
    #    return 301 https://$host$request_uri;
    #}

    location /static {
        include /etc/nginx/mime.types;
        alias /usr/src/collected_static;
    }

    location / {
        try_files $uri @django;
    }

    location @django {
        proxy_pass http://web:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 30s;
        proxy_read_timeout 30s;
    }
}

server {
    listen 443 ssl;
    server_name api.budgetwiser.org;
    charset utf-8;

    ssl_certificate /etc/letsencrypt/live/api.budgetwiser.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.budgetwiser.org/privkey.pem;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

    location /static {
        include /etc/nginx/mime.types;
        alias /usr/src/collected_static;
    }

    location / {
        try_files $uri @django;
    }

    location @django {
        proxy_pass http://web:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 30s;
        proxy_read_timeout 30s;
    }
}

# Catch-all invalid hosts
#server {
#    listen 80 default_server;
#    return 444;
#}

